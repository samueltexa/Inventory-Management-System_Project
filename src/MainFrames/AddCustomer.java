/**
The MainFrames package contains classes for creating and managing
graphical user interface (GUI) windows in a Java application.
The MainFrames package includes the following classes:
{@link Menu form}: A class that represents a main application frame
with a title, size, and optional menu bar.
{@link AddSupplier form}: A class that represents a form for adding new suppliers to the database that can
be opened from within a menu form.
{@link AddCustomer form}: A class that represents a form for adding new customers to the database that can
be opened from within a menu form.
{@link AddProducts form}: A class that represents a form for adding new products to the database that can
be opened from within a menu form.
 */
package MainFrames;
import Tables.Customer_Table;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
The AddCustomer class extends the javax.swing.JFrame class to provide
a GUI window for adding a new customer to a database.
The AddCustomer class includes the following components:
A lblName for displaying the customer name field label.
A txtMobile and lblMobile for entering and displaying the customer mobile number respectively.
A lblDistrict for displaying the customer District field label.
A txtAddress for entering the customer address.
A btnSave for saving and  submitting the customer information.
A btnClear for clearing all the text fields.
The AddCustomer class also includes methods for setting and getting
the customer name and address, as well as for submitting the customer information to a database.
  @author woola
 */
public final class AddCustomer extends javax.swing.JFrame {
     //Declaring Variables

    /**
     *
     */
    Connection con;

    /**
     *
     */
    PreparedStatement statement;

    /**
     *
     */
    Statement st;

    /**
     *
     */
    String cs;

    /**
     *
     */
    String user;

    /**
     *
     */
    String password;

    /**
     *
     */
    String query;

    /**
     *
     */
    ResultSet rs;

    /**
     *
     */
    String records;

    /**
     *
     */
    int count = 0;

    /**
     * Creates new form AddProducts
     */
    public AddCustomer() {
        // Initializing the user interface components
        con = null;
        st = null;
        cs = "jdbc:mysql://localhost:3306/inventorydatabase";
        user = "root";
        password = "";
        initComponents();
        AddDataToComboBox();
    }

    /**
     *Iterating through the database and loading data from the location table into the comboBox 
     */
    public void AddDataToComboBox(){
        // Connect to the database and execute a query to add customers:
        try {
            Class.forName("com.mysql.jdbc.Driver"); //register the driver
            con = DriverManager.getConnection(cs, user, password);
            String query = "SELECT Districts FROM location";
            st = con.createStatement();           
            statement = con.prepareStatement(query);
            rs = st.executeQuery(query);
             // Iterate over the result set and add items to the comboBox
            while(rs.next()){
                box.addItem(rs.getString("Districts"));   
            }
             box.setSelectedItem(null);
             txtdistrict.setText(null);
            
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                con.close();
                statement.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        namelbl = new javax.swing.JLabel();
        lblmobile = new javax.swing.JLabel();
        lbldistrict = new javax.swing.JLabel();
        lbladdress = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtmobile = new javax.swing.JTextField();
        txtdistrict = new javax.swing.JTextField();
        txtaddress = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        box = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add New Customer");

        namelbl.setText("Name");

        lblmobile.setText("Mobile");

        lbldistrict.setText("District");

        lbladdress.setText("Address");

        btnsave.setBackground(new java.awt.Color(102, 255, 102));
        btnsave.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 255, 255));
        btnsave.setText("Save");
        btnsave.setToolTipText("click to  add new products");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnback.setText("Back");
        btnback.setToolTipText("Click to go back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnclear.setText("Clear All");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        box.setToolTipText("Select Your Didtrict");
        box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnback)
                        .addGap(12, 12, 12)
                        .addComponent(namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnsave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblmobile, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtmobile, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbldistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbladdress, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(box, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnclear)
                .addGap(213, 213, 213))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnback)
                        .addComponent(btnsave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblmobile, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(txtmobile, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(lbldistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbladdress, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnclear)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
         Handles the event when the "save" button is clicked.
         <p>This method is called when the user clicks the "save" button in the user interface.
         It saves and submits the customer data to the database once clicked.</p>
         @param evt the ActionEvent object representing the event will occur
       */
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
         //declaring and iniatializing variables
        String s1 = txtname.getText();
        String s2 = txtmobile.getText();
        String s3 = txtdistrict.getText();
        String s4 = txtaddress.getText();
        try{
            Class.forName("com.mysql.jdbc.Driver"); //register the driver
            con = DriverManager.getConnection(cs, user, password);
            st = con.createStatement();           
            String query = "SELECT * FROM customer where Name = '" + s1 + "'";
            ResultSet re1 = st.executeQuery(query);
            if(!s1.equals("") && !s2.equals("") && !s3.equals("") && !s4.equals("")){
                if(re1.next()){
                    JOptionPane.showMessageDialog(null, "customer name already exists");
                }
                else{
                    query = "INSERT INTO customer(Name, Mobile, District, Address) VALUES('" + s1 + "','" + s2 +"','" + s3 +"','" + s4 +"')";
                    st.executeUpdate(query);// savings
                    JOptionPane.showMessageDialog(null, "Customer saved Successfully");
                    txtname.setText("");//make empty
                    txtmobile.setText("");//make empty
                    txtdistrict.setText("");//make empty
                    txtaddress.setText("");//make empty
                    //set focus to txtname
                    txtname.requestFocus();
                }
            }
            else{
            JOptionPane.showMessageDialog(null, "All fields must be filled");
            }
        }
        catch (SQLException | ClassNotFoundException ex){
        }
        finally{
            try {
                if (st != null){
                    st.close();
                }
                if (con != null){
                    con.close();
                }
            }
            catch (SQLException ex){
            }
        }
    }//GEN-LAST:event_btnsaveActionPerformed
    /**
      Handles the event when the "back" button is clicked.
      <p>This method is called when the user clicks the "back" button in the user interface.
      It returns the user to the Customer_List.</p>
      @param evt the ActionEvent object representing the event will occur occurred
     */
    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
         //calling the Customer_Table form
        Customer_Table customer_table = new Customer_Table();
        customer_table.show();
        dispose();
    }//GEN-LAST:event_btnbackActionPerformed
    /**
      Handles the event when the "clear" button is clicked.
      <p>This method is called when the user clicks the "clear" button in the user interface.
      It clears all the data in the text fields and sets focus to txtName.</p>
      @param evt the ActionEvent object representing the event will occur occurred
     */
    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // clearing the data in the text field
        txtname.setText("");//make empty
        txtmobile.setText("");//make empty
        txtdistrict.setText("");//make empty
        txtaddress.setText("");//make empty
        //seting focus to txtname
        txtname.requestFocus();
    }//GEN-LAST:event_btnclearActionPerformed
/**
  Handles the selection of an item in the JComboBox.
  @param evt is the ActionEvent object that trigger this method
 */
    private void boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxActionPerformed
        //seting the data in the comboBox to the District texField:
        txtdistrict.setText((String) box.getSelectedItem());
            
    }//GEN-LAST:event_boxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AddCustomer().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> box;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnsave;
    private javax.swing.JLabel lbladdress;
    private javax.swing.JLabel lbldistrict;
    private javax.swing.JLabel lblmobile;
    private javax.swing.JLabel namelbl;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtdistrict;
    private javax.swing.JTextField txtmobile;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}
