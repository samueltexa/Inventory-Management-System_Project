/**
  The Tables package provides classes for creating and manipulating tables of data.
  This includes classes for defining table structures, inserting and deleting rows and columns, 
  and querying and modifying data in tables.
 */
package Tables;
import InternalFrames.DeleteCustomer;
import InternalFrames.AddCustomer;
import InternalFrames.EditCustomer;
import MainFrames.Menu;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
  The Customer_Table class represents a graphical user interface for displaying customer data in a table format.
  It extends the javax.swing.JFrame class to create a window for displaying the data.
  This class includes methods for setting up the table, adding data to it, and updating the view.
  <p>This class is designed to be used in conjunction with a database system that stores customer data.</p>
  @author woola
 */
public class Customer_Table extends javax.swing.JFrame {
    /**
     Declaring connection Variable
     */
    Connection con;
    /**
     Declaring Prepared statement Variable
     */
    PreparedStatement statement;
    /**
     Declaring statement Variable
     */
    Statement st;
    /**
     Declaring local host Variable
     */
    String cs;
    /**
     Declaring connection user Variable
     */
    String user;
    /**
     Declaring connection password Variable
     */
    String password;
    /**
     Declaring MySQL query Variable
     */
    String query;
    /**
     Declaring result Variable
     */
    ResultSet rs;
    /**
     Declaring count Variable
     */
    int count = 0;
    /**
     creating a DefaultTableModel object called model
     */
    DefaultTableModel model;
    /**
     Constructs a new Customer_Table object and initializes the user interface components.
     */
    public Customer_Table() {
       // Initializing the user interface components
        con = null;
        st = null;
        cs = "jdbc:mysql://localhost:3306/inventorydatabase";
        user = "root";
        password = "";
        initComponents();
        setLocation(300,100);
         // Connect to the database and execute a query to retrieve customer data and display it into a table.
         try{
            Class.forName("com.mysql.jdbc.Driver"); //register the driver
            con = DriverManager.getConnection(cs, user, password);
            st = con.createStatement();
            query = "SELECT Name, Mobile,Email, District, Address FROM customer";
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
            colName[i] = rsmd.getColumnName(i+1);
            }
            model = new DefaultTableModel();
            model.setColumnIdentifiers(colName); // setting the column headers
            customertable.setModel(model); // setting the table model on JTable
            String Name, Mobile,Email, District, Address;
            while (rs.next()){
                Name = rs.getString(1);
                Mobile = rs.getString(2);
                Email = rs.getString(3);
                District = rs.getString(4);
                Address = rs.getString(5);
                String[] row = {Name, Mobile,Email, District, Address};
            model.addRow(row);
            }
            st.close();
            con.close();
            }
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Customer_Table.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        line = new javax.swing.JSeparator();
        btnback = new javax.swing.JButton();
        btnaddnewcustomer = new javax.swing.JButton();
        pane = new javax.swing.JDesktopPane();
        btnedit = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customertable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customer List");

        line.setBackground(java.awt.Color.blue);
        line.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        btnback.setText("Back");
        btnback.setToolTipText("Back to menu");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnaddnewcustomer.setBackground(new java.awt.Color(102, 255, 102));
        btnaddnewcustomer.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        btnaddnewcustomer.setForeground(new java.awt.Color(255, 255, 255));
        btnaddnewcustomer.setText("Add New Customers");
        btnaddnewcustomer.setToolTipText("click to  add new customer");
        btnaddnewcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddnewcustomerActionPerformed(evt);
            }
        });

        btnedit.setBackground(java.awt.Color.green);
        btnedit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnrefresh.setBackground(java.awt.Color.green);
        btnrefresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnrefresh.setText("Refresh");
        btnrefresh.setToolTipText("click to refresh page");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btndelete.setForeground(java.awt.Color.red);
        btndelete.setText("Delete");
        btndelete.setToolTipText("click to go to the delete page");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        customertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        customertable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customertableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customertable);

        pane.setLayer(btnedit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pane.setLayer(btnrefresh, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pane.setLayer(btndelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pane.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout paneLayout = new javax.swing.GroupLayout(pane);
        pane.setLayout(paneLayout);
        paneLayout.setHorizontalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnedit)
                .addGap(256, 256, 256)
                .addComponent(btnrefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btndelete)
                .addGap(23, 23, 23))
            .addComponent(jScrollPane1)
        );
        paneLayout.setVerticalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnrefresh)
                    .addComponent(btnedit)
                    .addComponent(btndelete))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 509, Short.MAX_VALUE)
                .addComponent(btnaddnewcustomer))
            .addComponent(pane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(line, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnaddnewcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pane)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(462, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  /**
      Handles the event when the "back" button is clicked.
      <p>This method is called when the user clicks the "back" button in the user interface.
      It closes the customer form and opens the menu form.</p>
      @param evt the ActionEvent object represent the event that will occur
     */
    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // Callling the Menu form.
        Menu menu = new Menu();
        menu.show();
        //closing the AddCustomer form
        dispose();
    }//GEN-LAST:event_btnbackActionPerformed
    /**
      Handles the event when the "addNewCustomer" button is clicked.
      <p>This method is called when the user clicks the "add new customer" button in the user interface.
      It opens the add new customer form once clicked.</p>
      @param evt the ActionEvent object representing the event will occur
    */
    private void btnaddnewcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddnewcustomerActionPerformed
        pane.repaint();
        //calling the Deleteproduct form
        AddCustomer addcustomer = new AddCustomer();
        //adding the product form to the desktop pane and making it visible
        pane.add(addcustomer).setVisible(true);
    }//GEN-LAST:event_btnaddnewcustomerActionPerformed
    /**
      Handles the event when the "update" button is clicked.
      <p>This method is called when the user clicks the "update" button in the user interface.
      It reloads the product table form.</p>
      @param evt the ActionEvent object represent the event that will occur
     */
    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
         //reloading the customer table
        Customer_Table customer_table = new Customer_Table();
        customer_table.show();
        dispose();
    }//GEN-LAST:event_btnrefreshActionPerformed
    /**
      Handles the event when the "delete" button is clicked.
      <p>This method is called when the user clicks the "delete" button in the user interface.
      It loads the form that displays the product to be deleted from the database.</p>
      @param evt the ActionEvent object represent the event that will occur
     */
    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        pane.repaint();
        //calling the Deleteproduct form
        DeleteCustomer deletecustomer = new DeleteCustomer();
        //adding the product form to the desktop pane and making it visible
        pane.add(deletecustomer).setVisible(true);
    }//GEN-LAST:event_btndeleteActionPerformed

    private void customertableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customertableMouseClicked
         //Getting data of the selected row:
        String name = model.getValueAt(customertable.getSelectedRow(), 0).toString();
        String mobile = model.getValueAt(customertable.getSelectedRow(), 1).toString();
        String email = model.getValueAt(customertable.getSelectedRow(), 2).toString();
        String district = model.getValueAt(customertable.getSelectedRow(), 3).toString();
        String address = model.getValueAt(customertable.getSelectedRow(),4).toString();
        //calling the edit prouct form
        EditCustomer editcustomer = new EditCustomer();
        pane.repaint();
        //adding the product form to the desktop pane and making it visible
        pane.add(editcustomer).setVisible(true);
        //setting to textfield
        editcustomer.txtname.setText(name);
        editcustomer.txtmobile.setText(mobile);
        editcustomer.txtemail.setText(email);
        editcustomer.txtdistrict.setText(district);
        editcustomer.txtaddress.setText(address);
    }//GEN-LAST:event_customertableMouseClicked

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        JOptionPane.showMessageDialog(this, "Please select the customer to edit");
    }//GEN-LAST:event_btneditActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Customer_Table().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddnewcustomer;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JTable customertable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator line;
    private javax.swing.JDesktopPane pane;
    // End of variables declaration//GEN-END:variables
}
